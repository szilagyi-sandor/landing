@import "/src/assets/styles/mixins";
@import "/src/assets/styles/variables";

$menuHeight: 73px;

.layoutNavigation {
  // this one is overwritten by js calculation
  min-height: $menuHeight;

  .fixedContainer {
    top: 0;
    left: 0;
    width: 100%;
    z-index: 100;
    position: fixed;
    backdrop-filter: blur(10px);
    border-bottom: 1px solid $gray500;
    background: rgba(14 15 17 / 60%);

    .container {
      @include container;

      display: flex;
      padding-top: 8px;
      padding-bottom: 8px;
      align-items: center;

      a {
        color: $gray300;
        padding: 4px 8px;
        font-weight: 400;
        text-decoration: none;
        display: inline-block;

        &:hover,
        &:active,
        &.active {
          color: $white;
        }

        &.active {
          text-decoration: underline;
        }
      }

      h1 {
        z-index: 20;
        position: relative;
        margin-right: 20px;

        a {
          padding: 0;
          white-space: nowrap;

          &.active {
            text-decoration: none;
          }
        }
      }

      > button {
        z-index: 20;
        border: none;
        background: none;
        margin-left: auto;
        position: relative;
        display: inline-block;

        > span {
          height: 1px;
          width: 20px;
          display: block;
          margin-bottom: 5px;
          background: $white;

          &:last-child {
            margin-bottom: 0;
          }
        }
      }

      nav {
        // this is relative to the fixed parent div, that's why we cannot use inset:0;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        overflow: auto;
        position: fixed;
        background: $black300;
        padding-top: $menuHeight;

        @media (width >= $breakPoint) {
          width: auto;
          height: auto;
          flex-grow: 1;
          display: flex;
          padding-top: 0;
          flex-wrap: wrap;
          background: none;
          position: relative;
          align-items: center;
        }

        ul {
          margin: 0;
          padding: 0;
          display: block;
          text-align: center;
          list-style-type: none;

          @media (width >= $breakPoint) {
            display: flex;
            flex-wrap: wrap;
            text-align: left;
          }

          &:last-child {
            @media (width >= $breakPoint) {
              margin-left: auto;
            }
          }
        }
      }
    }
  }
}

body.layoutNavigationOpen {
  overflow: hidden;

  &.scrollable {
    .layout {
      padding-right: $scrollbarWidth;
    }
  }
}

// CHECKED 1.0
